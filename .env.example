# All containers from separate compose files with same name are grouped (e.g. in Docker Desktop)
# https://docs.docker.com/compose/environment-variables/envvars/
COMPOSE_PROJECT_NAME=example
# Will stop docker compose from detecting orphaned containers for the project
COMPOSE_IGNORE_ORPHANS=true
IPYTHONDIR=/app/.ipython
POSTGRES_DOCKER_PORT=5497


# Mode: use one of 0, 1, 2 presets
# -----------------------------------------------------------------------------
# Mode 0: As separate servises on localhost with custom ports
COMPOSE_FILE=local.yml
DOMAIN=localhost
DJANGO_DOCKER_PORT=8000
MAILHOG_DOCKER_PORT=8025
FLOWER_DOCKER_PORT=5555
DOCS_DOCKER_PORT=9000

# Mode 1: As dev server behind Traefik with http (avaliable paths: dj-admin/, api/, ststic/, silk/)
# For Windows users: use `;` (semicolon) as separator - local.yml;local.traefik.yml
# COMPOSE_FILE=local.yml:local.traefik.yml
# DOMAIN=localhost  # or another aliace for 127.0.0.1 declared in etc/hosts, but same as DOMAIN in Traefik .env!

# Mode 2: As dev server behind the Traefik + SSL and custom domain (avaliable paths: dj-admin/, api/, ststic/, silk/)
# For Windows users: use `;` (semicolon) as separator - local.yml;local.traefik.yml;local.traefik.ssl.yml
# COMPOSE_FILE=local.yml:local.traefik.yml:local.traefik.ssl.yml
# DOMAIN=tpl.local

# Production mode in production.yml!


# Django
# ------------------------------------------------------------------------------
DJANGO_ADMIN_URL=dj-admin
DJANGO_ALLOWED_HOSTS=127.0.0.1,localhost,${DOMAIN}

# Redis
# ------------------------------------------------------------------------------
REDIS_URL=redis://redis:6379/0

# Sentry
# ------------------------------------------------------------------------------
SENTRY_DSN=
SENTRY_TRACES_SAMPLE_RATE=0.2
SENTRY_ENVIRONMENT=development

# Flower
# ------------------------------------------------------------------------------
CELERY_FLOWER_USER=flower
CELERY_FLOWER_PASSWORD=flower

# PostgreSQL
# ------------------------------------------------------------------------------
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=backend
POSTGRES_USER=local_user
POSTGRES_PASSWORD=12345678
